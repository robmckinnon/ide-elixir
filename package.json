{
  "name": "ide-elixir",
  "main": "./lib/ide-elixir",
  "version": "0.2.27",
  "description": "Atom IDE plugin for Elixir, powered by ElixirLS",
  "keywords": [],
  "repository": {
    "type": "git",
    "url": "https://github.com/robmckinnon/ide-elixir"
  },
  "license": "MIT",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "configurationSchema": {
    "title": "ElixirLS configuration",
    "properties": {
      "elixirLS.dialyzerEnabled": {
        "type": "boolean",
        "default": true,
        "description": "Run ElixirLS's rapid Dialyzer when code is saved"
      },
      "elixirLS.dialyzerWarnOpts": {
        "description": "Dialyzer options to enable or disable warnings. See Dialyzer's documentation for options. Note that the \"race_conditions\" option is unsupported",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "type": "string",
          "enum": [
            "error_handling",
            "no_behaviours",
            "no_contracts",
            "no_fail_call",
            "no_fun_app",
            "no_improper_lists",
            "no_match",
            "no_missing_calls",
            "no_opaque",
            "no_return",
            "no_undefined_callbacks",
            "no_unused",
            "underspecs",
            "unknown",
            "unmatched_returns",
            "overspecs",
            "specdiffs"
          ]
        },
        "default": []
      },
      "elixirLS.dialyzerFormat": {
        "description": "Formatter to use for Dialyzer warnings",
        "type": "string",
        "enum": [
          "dialyzer",
          "dialyxir_short",
          "dialyxir_long"
        ],
        "default": "dialyzer"
      },
      "elixirLS.mixEnv": {
        "type": "string",
        "description": "Mix environment to use for compilation",
        "default": "test",
        "minLength": 1
      },
      "elixirLS.projectDir": {
        "type": "string",
        "description": "Subdirectory containing Mix project if not in the project root",
        "minLength": 1
      },
      "elixirLS.fetchDeps": {
        "type": "boolean",
        "description": "Automatically fetch project dependencies when compiling",
        "default": true
      },
      "elixirLS.suggestSpecs": {
        "type": "boolean",
        "description": "Suggest @spec annotations inline using Dialyzer's inferred success typings (Requires Dialyzer)",
        "default": true
      },
      "elixirLS.trace.server": {
        "type": "string",
        "enum": [
          "off",
          "messages",
          "verbose"
        ],
        "default": "messages",
        "description": "Traces the communication between Atom and the Elixir language server."
      }
    }
  },
  "dependencies": {
    "atom-languageclient": "^0.9.9",
    "shelljs": "^0.8.4"
  },
  "enhancedScopes": [
    "source.elixir"
  ],
  "consumedServices": {
    "datatip": {
      "versions": {
        "0.1.0": "consumeDatatip"
      }
    },
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinterV2"
      }
    },
    "signature-help": {
      "versions": {
        "0.1.0": "consumeSignatureHelp"
      }
    }
  },
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "code-actions": {
      "versions": {
        "0.1.0": "provideCodeActions"
      }
    },
    "code-format.range": {
      "versions": {
        "0.1.0": "provideCodeFormat"
      }
    },
    "definitions": {
      "versions": {
        "0.1.0": "provideDefinitions"
      }
    },
    "find-references": {
      "versions": {
        "0.1.0": "provideFindReferences"
      }
    },
    "outline-view": {
      "versions": {
        "0.1.0": "provideOutlines"
      }
    }
  },
  "scripts": {
    "prepare": "cd elixir-ls && mix deps.get && mix elixir_ls.release -o ../elixir-ls-release"
  }
}
